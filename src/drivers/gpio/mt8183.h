/*
 * Copyright 2018 MediaTek Inc.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but without any warranty; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef __DRIVERS_GPIO_MT8183_H__
#define __DRIVERS_GPIO_MT8183_H__

#include <stdint.h>

#include "drivers/gpio/gpio.h"

enum {
	PAD_EINT0 = 0,
	PAD_EINT1 = 1,
	PAD_EINT2 = 2,
	PAD_EINT3 = 3,
	PAD_EINT4 = 4,
	PAD_EINT5 = 5,
	PAD_EINT6 = 6,
	PAD_EINT7 = 7,
	PAD_EINT8 = 8,
	PAD_EINT9 = 9,
	PAD_EINT10 = 10,
	PAD_SCL6 = 11,
	PAD_SDA6 = 12,
	PAD_DPI_D0 = 13,
	PAD_DPI_D1 = 14,
	PAD_DPI_D2 = 15,
	PAD_DPI_D3 = 16,
	PAD_DPI_D4 = 17,
	PAD_DPI_D5 = 18,
	PAD_DPI_D6 = 19,
	PAD_DPI_D7 = 20,
	PAD_DPI_D8 = 21,
	PAD_DPI_D9 = 22,
	PAD_DPI_D10 = 23,
	PAD_DPI_D11 = 24,
	PAD_DPI_HSYNC = 25,
	PAD_DPI_VSYNC = 26,
	PAD_DPI_DE = 27,
	PAD_DPI_CK = 28,
	PAD_MSDC1_CLK = 29,
	PAD_MSDC1_DAT3 = 30,
	PAD_MSDC1_CMD = 31,
	PAD_MSDC1_DAT0 = 32,
	PAD_MSDC1_DAT2 = 33,
	PAD_MSDC1_DAT1 = 34,
	PAD_SIM2_SIO = 35,
	PAD_SIM2_SRST = 36,
	PAD_SIM2_SCLK = 37,
	PAD_SIM1_SCLK = 38,
	PAD_SIM1_SRST = 39,
	PAD_SIM1_SIO = 40,
	PAD_IDDIG = 41,
	PAD_DRVBUS = 42,
	PAD_DISP_PWM = 43,
	PAD_DSI_TE = 44,
	PAD_LCM_RST = 45,
	PAD_INT_SIM2 = 46,
	PAD_INT_SIM1 = 47,
	PAD_SCL5 = 48,
	PAD_SDA5 = 49,
	PAD_SCL3 = 50,
	PAD_SDA3 = 51,
	PAD_BPI_ANT2 = 52,
	PAD_BPI_ANT0 = 53,
	PAD_BPI_OLAT1 = 54,
	PAD_BPI_BUS8 = 55,
	PAD_BPI_BUS9 = 56,
	PAD_BPI_BUS10 = 57,
	PAD_RFIC0_BSI_D2 = 58,
	PAD_RFIC0_BSI_D1 = 59,
	PAD_RFIC0_BSI_D0 = 60,
	PAD_MISC_BSI_DO_1 = 61,
	PAD_MISC_BSI_CK_1 = 62,
	PAD_MISC_BSI_DO_0 = 63,
	PAD_MISC_BSI_CK_0 = 64,
	PAD_MISC_BSI_DO_3 = 65,
	PAD_MISC_BSI_CK_3 = 66,
	PAD_MISC_BSI_DO_2 = 67,
	PAD_MISC_BSI_CK_2 = 68,
	PAD_BPI_BUS7 = 69,
	PAD_BPI_BUS6 = 70,
	PAD_BPI_BUS5 = 71,
	PAD_BPI_BUS4 = 72,
	PAD_BPI_BUS3 = 73,
	PAD_BPI_BUS2 = 74,
	PAD_BPI_BUS1 = 75,
	PAD_BPI_BUS0 = 76,
	PAD_BPI_ANT1 = 77,
	PAD_BPI_OLAT0 = 78,
	PAD_BPI_PA_VM1 = 79,
	PAD_BPI_PA_VM0 = 80,
	PAD_SDA1 = 81,
	PAD_SDA0 = 82,
	PAD_SCL0 = 83,
	PAD_SCL1 = 84,
	PAD_SPI_MI = 85,
	PAD_SPI_CSB = 86,
	PAD_SPI_MO = 87,
	PAD_SPI_CLK = 88,
	PAD_SRCLKENAI = 89,
	PAD_PWM_A = 90,
	PAD_KPROW1 = 91,
	PAD_KPROW0 = 92,
	PAD_KPCOL0 = 93,
	PAD_KPCOL1 = 94,
	PAD_URXD0 = 95,
	PAD_UTXD0 = 96,
	PAD_CAM_PDN0 = 97,
	PAD_CAM_PDN1 = 98,
	PAD_CAM_CLK0 = 99,
	PAD_CAM_CLK1 = 100,
	PAD_CAM_RST0 = 101,
	PAD_CAM_RST1 = 102,
	PAD_SCL2 = 103,
	PAD_SDA2 = 104,
	PAD_SCL4 = 105,
	PAD_SDA4 = 106,
	PAD_CAM_PDN2 = 107,
	PAD_CAM_CLK2 = 108,
	PAD_CAM_RST2 = 109,
	PAD_CAM_PDN3 = 110,
	PAD_CAM_CLK3 = 111,
	PAD_CAM_RST3 = 112,
	PAD_CONN_TOP_CLK = 113,
	PAD_CONN_TOP_DATA = 114,
	PAD_CONN_BT_CLK = 115,
	PAD_CONN_BT_DATA = 116,
	PAD_CONN_WF_CTRL0 = 117,
	PAD_CONN_WF_CTRL1 = 118,
	PAD_CONN_WF_CTRL2 = 119,
	PAD_CONN_WB_PTA = 120,
	PAD_CONN_HRST_B = 121,
	PAD_MSDC0_CMD = 122,
	PAD_MSDC0_DAT0 = 123,
	PAD_MSDC0_CLK = 124,
	PAD_MSDC0_DAT2 = 125,
	PAD_MSDC0_DAT4 = 126,
	PAD_MSDC0_DAT6 = 127,
	PAD_MSDC0_DAT1 = 128,
	PAD_MSDC0_DAT5 = 129,
	PAD_MSDC0_DAT7 = 130,
	PAD_MSDC0_DSL = 131,
	PAD_MSDC0_DAT3 = 132,
	PAD_MSDC0_RSTB = 133,
	PAD_RTC32K_CK = 134,
	PAD_WATCHDOG = 135,
	PAD_AUD_CLK_MOSI = 136,
	PAD_AUD_SYNC_MOSI = 137,
	PAD_AUD_DAT_MOSI0 = 138,
	PAD_AUD_DAT_MOSI1 = 139,
	PAD_AUD_CLK_MISO = 140,
	PAD_AUD_SYNC_MISO = 141,
	PAD_AUD_DAT_MISO0 = 142,
	PAD_AUD_DAT_MISO1 = 143,
	PAD_PWRAP_SPI0_MI = 144,
	PAD_PWRAP_SPI0_CSN = 145,
	PAD_PWRAP_SPI0_MO = 146,
	PAD_PWRAP_SPI0_CK = 147,
	PAD_SRCLKENA0 = 148,
	PAD_SRCLKENA1 = 149,
	PAD_PERIPHERAL_EN0 = 150,
	PAD_PERIPHERAL_EN1 = 151,
	PAD_PERIPHERAL_EN2 = 152,
	PAD_PERIPHERAL_EN3 = 153,
	PAD_SCP_VREQ_VAO = 154,
	PAD_ANT_SEL0 = 155,
	PAD_ANT_SEL1 = 156,
	PAD_ANT_SEL2 = 157,
	PAD_PERIPHERAL_EN6 = 158,
	PAD_PERIPHERAL_EN7 = 159,
	PAD_PERIPHERAL_EN8 = 160,
	PAD_SPI1_MI = 161,
	PAD_SPI1_CSB = 162,
	PAD_SPI1_MO = 163,
	PAD_SPI1_CLK = 164,
	PAD_PERIPHERAL_EN4 = 165,
	PAD_PERIPHERAL_EN9 = 166,
	PAD_RFIC0_BSI_EN = 167,
	PAD_RFIC0_BSI_CK = 168,
	PAD_PERIPHERAL_EN5 = 169,
	PAD_I2S1_BCK = 170,
	PAD_I2S1_LRCK = 171,
	PAD_I2S1_DO = 172,
	PAD_I2S1_MCK = 173,
	PAD_I2S2_DI = 174,
	PAD_PERIPHERAL_EN12 = 175,
	PAD_PERIPHERAL_EN13 = 176,
	PAD_PERIPHERAL_EN14 = 177,
	PAD_PERIPHERAL_EN10 = 178,
	PAD_PERIPHERAL_EN11 = 179,
	GPIO_MAX,
};

typedef struct {
	uint32_t val;
	uint32_t set;
	uint32_t rst;
	uint32_t align;
} GpioValRegs;

typedef struct {
	GpioValRegs dir[6];
	uint8_t rsv00[160];
	GpioValRegs dout[6];
	uint8_t rsv01[160];
	GpioValRegs din[6];
} GpioRegs;

typedef struct {
	GpioOps ops;
	u32 pin_num;
} MtGpio;

typedef struct {
	uint32_t sta[16];
	uint32_t ack[16];
} EintRegs;

GpioOps *new_mtk_gpio_input(u32 pin);
GpioOps *new_mtk_gpio_output(u32 pin);
GpioOps *new_mtk_eint(u32 pin);

#endif
